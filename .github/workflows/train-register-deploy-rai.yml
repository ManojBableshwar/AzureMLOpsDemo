name: rai-train-deploy-register-workflow
on: 
  push:
  workflow_dispatch:
    inputs:
      GROUP:
        default: "rg-contoso-819prod"
      LOCATION:
        default: "eastus"
      WORKSPACE:
        default: "mlw-contoso-819prod"
  workflow_call:
    inputs:
      GROUP:
        default: "rg-contoso-819prod"
        type: string
      LOCATION:
        default: "eastus"
        type: string
      WORKSPACE:
        default: "mlw-contoso-819prod"
        type: string
    secrets:
      AZ_CREDS1:
        required: true

env:
  GROUP: ${{ github.event.inputs.name.GROUP }}
  LOCATION: ${{ github.event.inputs.name.LOCATION }}
  WORKSPACE: ${{ github.event.inputs.name.WORKSPACE }}  

jobs:
  train-job:
    environment: 
      name: dev
      url: ${{ steps.create-job-step.outputs.RUNURI }}
    runs-on: ubuntu-18.04
    steps:
    - name: check-out-repo-step
      uses: actions/checkout@v2
      with:
        path: mlops
    - name: check-out-rai-setp
      uses: actions/checkout@v3
      with:
        repository: riedgar-ms/mlops-project-template
        ref: riedgar-ms/rai-example-01
        path: rai
    - name: azure-login-step
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZ_CREDS1 }}
    - name: set-azureml-ws-context-step
      run: bash setup.sh 
      working-directory: mlops/cli
    - name: create-job-step
      id: create-job-step 
      run: bash -x create-job.sh ../../rai/classical/aml-cli-v2/mlops/azureml/train/pipeline.yml
      working-directory: mlops/cli
    outputs:
      TRAININGJOB_RUNID: ${{ steps.create-job-step.outputs.RUNID }}

  get-model-job:
    #if: ${{ false }}  # disable for now
    needs: train-job
    environment: 
      name: test
      url: ${{ steps.get-model-step.outputs.MODELURI }}
    runs-on: ubuntu-18.04
    steps:
    - name: check-out-repo-step
      uses: actions/checkout@v2
    - name: azure-login-step
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZ_CREDS1}}
    - name: set-azureml-ws-context-step
      run: bash setup.sh 
      working-directory: cli
    - name: get-model-step
      id: get-model-step
      run: bash -x get-rai-model.sh ${{ needs.train-job.outputs.TRAININGJOB_RUNID }} 
      working-directory: cli
    outputs:
      GETMODELJOB_MODELID: ${{ steps.get-model-step.outputs.MODELID }}      

  deploy-model-job:
    if: ${{ false }}  # disable for now
    needs: get-model-job
    environment: 
      name: pre-prod
      url: ${{ steps.deploy-model-step.outputs.EPURI }}
    runs-on: ubuntu-18.04
    steps:
    - name: check-out-repo-step
      uses: actions/checkout@v2
    - name: azure-login-step
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZ_CREDS1}}
    - name: set-azureml-ws-context-step
      run: bash setup.sh 
      working-directory: cli
    - name: deploy-model-step
      id: deploy-model-step
      run: bash -x deploy-model.sh ${{ needs.get-model-job.outputs.GETMODELJOB_MODELID }} 1
      working-directory: cli
    outputs:
      DEPLOYJOB_ENDPOINTID: ${{ steps.deploy-model-step.outputs.ENDPOINTID }}
      DEPLOYJOB_DEPLOYMENTID: ${{ steps.deploy-model-step.outputs.DEPLOYMENTID }}
      DEPLOYJOB_EPURI: ${{ steps.deploy-model-step.outputs.EPURI }}

  release-model-job:
    needs: deploy-model-job
    if: ${{ false }}  # disable for now
    environment: 
      name: prod
      url: ${{ needs.get-model-job.outputs.DEPLOYJOB_EPURI }}
    runs-on: ubuntu-18.04
    steps:
    - name: check-out-repo-step
      uses: actions/checkout@v2
    - name: azure-login-step
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZ_CREDS1}}
    - name: set-azureml-ws-context-step
      run: bash setup.sh 
      working-directory: cli
    - name: release-model-step
      id: release-model-step
      run: bash -x release-model.sh ${{ needs.deploy-model-job.outputs.DEPLOYJOB_ENDPOINTID }} ${{ needs.deploy-model-job.outputs.DEPLOYJOB_DEPLOYMENTID }}
      working-directory: cli 

